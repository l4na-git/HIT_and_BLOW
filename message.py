# 表示するメッセージ
import os
import asyncio

# 正解したとき
collect_message = """
⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⡀⡀⡀⣿⡏⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣿⡟⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣿⡏⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣿⣿⣿⣶⣶⣤⡤⡀⡀⡀
⡀⡀⡀⡀⡀⣿⡇⢀⣠⡄⡀⢤⣿⣦⡀⡀⡀⡀⡀⡀⢹⣧⡀⡀⡀⡀⣿⠁⡀⡀⡀⡀⡀⡀⡀⡀⣀⣀⣀⣀⣤⣤⣤⣶⣶⣿⣿⣿⣿⡀⡀⡀⡀⡀⡀⣿⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠉⠉⠛⠃⡀⡀⡀
⡀⡀⣿⣿⣿⣿⡿⠿⠛⠉⡀⡀⠈⠻⣿⣤⡀⡀⡀⡀⠘⣿⣤⣾⡿⢿⣿⠿⢿⣿⣤⡀⡀⡀⡀⠘⠿⠿⠛⠛⠉⢩⣾⡿⠉⡀⡀⣄⡀⡀⡀⡀⡀⡀⡀⣿⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣀⣤⣀⡀⡀⡀⡀
⡀⡀⡀⡀⡀⣿⡇⡀⡀⡀⡀⡀⡀⡀⠈⡀⡀⡀⡀⡀⣴⣿⡏⡀⡀⣿⠇⡀⡀⡀⠻⣿⡀⡀⡀⡀⡀⡀⡀⡀⣰⣿⠁⡀⡀⢠⡀⠙⢿⡦⡀⡀⡀⡀⡀⢻⣿⣀⣴⣾⣿⣿⣷⡀⡀⣶⣿⣿⣿⠿⠿⠿⢿⣿⡄⡀⡀
⡀⡀⡀⡀⡀⣿⣷⣾⣿⣿⣿⣿⣶⣀⡀⡀⡀⡀⡀⣾⡟⠸⣿⡀⣸⡿⡀⡀⡀⡀⡀⣿⣇⡀⡀⡀⡀⡀⡀⡀⣿⠇⡀⡀⡀⡀⠛⣷⠄⡀⡀⡀⡀⡀⣠⣾⣿⠿⠋⠉⡀⡀⡀⡀⡀⠘⠉⡀⡀⡀⡀⡀⡀⣿⣿⡀⡀
⡀⡀⢀⣶⡿⣻⡇⡀⡀⡀⡀⡀⠈⢿⣧⡀⡀⡀⣸⣿⡀⡀⢿⣧⣿⠁⡀⡀⡀⡀⡀⣿⣿⡀⡀⡀⡀⡀⡀⡀⣿⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣠⣿⠟⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣾⣿⡀⡀
⡀⡀⣿⠋⡀⣿⡇⡀⡀⡀⡀⡀⡀⠈⣿⡀⡀⡀⣿⡇⡀⡀⣠⣿⣷⡀⡀⡀⡀⡀⢀⣿⠇⡀⡀⡀⡀⡀⡀⡀⢿⣷⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣿⡏⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣠⣿⡟⡀⡀
⡀⢸⣿⡀⡀⣿⡇⡀⠰⣿⣄⡀⢀⣼⣿⡀⡀⡀⠘⣿⣤⣴⡿⠁⠙⠁⡀⢀⣠⣾⣿⠋⡀⡀⡀⡀⡀⡀⡀⡀⡀⠻⣿⣶⣤⣀⣀⡀⡀⡀⡀⡀⣿⣷⣄⣀⣀⣀⣀⣀⣀⣀⡀⡀⡀⡀⡀⡀⡀⡀⣀⣾⣿⠟⡀⡀⡀
⡀⡀⠿⣷⣾⡿⠁⡀⡀⠈⠻⠿⠿⠋⡀⡀⡀⡀⡀⡀⠉⠉⡀⡀⡀⡀⡀⠘⠟⠉⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠉⠛⠛⠿⠁⡀⡀⡀⡀⡀⠙⠛⠿⠿⠿⠿⠿⠿⠿⠇⡀⡀⡀⡀⠐⣿⣿⣿⠟⠁⡀⡀⡀⡀
⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠈⡀⡀⡀⡀⡀⡀⡀⡀
"""


# 正解できなかったとき
fall_message = """
⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣀⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⢸⣿⣿⣿⣿⣿⣿⡇⡀⢹⣿⠐⢿⣦⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣿⠿⣷⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⡀⢰⣿⡀⡀⡀⣤⣤⣼⣿⣴⣶⣶⣶⡀⡀⡀⡀⡀⡀⣀⣾⡿⠁⡀⠈⢿⣷⣤⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⡀⣾⣧⣤⣤⡄⠉⠉⢹⣿⡀⡀⡀⡀⡀⡀⡀⣠⣶⣿⠿⣻⣾⣿⣿⣿⣿⣾⠛⢿⣿⣶⠆⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⢀⣿⡀⡀⣿⠇⣻⣿⣿⣿⣿⡿⠿⠿⡀⡀⡀⠙⠉⢀⣀⣀⣀⣀⣀⣀⣀⣀⣠⡀⡀⠈⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⣾⣿⣤⢀⣿⡀⢀⣀⣀⣿⣀⣀⣤⣤⡤⡀⡀⡀⡀⠘⠛⠛⠛⠛⠛⠛⠛⣻⣿⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⠺⡟⡀⠉⣿⡟⡀⠿⠿⠛⣿⡛⠛⣩⡉⠉⡀⡀⡀⡀⡀⡀⡀⡀⢴⣷⡀⣰⣿⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⡀⡀⣰⣿⡀⡀⡀⡀⡀⢹⣷⣾⠟⡀⡀⡀⡀⡀⡀⣿⡖⢸⣿⡀⢻⡿⡀⠁⠠⣾⣄⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⡀⣴⣿⠁⡀⡀⡀⣠⣴⣿⢿⣷⡀⣸⣶⡀⡀⡀⣸⣿⡀⢸⣿⡀⡀⡀⡀⢰⣶⠈⣿⣦⡀⡀⡀⣶⡀⡀⢲⣶⡀⡀⣶⡆⡀⡀
⡀⠐⣿⠟⡀⡀⠐⣿⡿⠛⠁⡀⡀⠙⣿⣿⠃⡀⡀⡀⢿⠃⡀⢸⣿⣶⣶⣶⣶⣾⡿⡀⠈⠛⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
"""


# print(collect_message)
# print(fall_message)

# アートをリストに変換して1行ずつ操作可能にする
art_lines = collect_message.splitlines()

# アニメーションの設定
delay = 0.04  # フレーム間の遅延時間


# アニメーションのループ
async def animation(art_lines):
    try:
        max_width = max(len(line) for line in art_lines)  # アート全体の最大幅を取得
        for step in range(1, max_width + 1):  # 1文字ずつ描画を増やす
            os.system("cls" if os.name == "nt" else "clear")  # 画面をクリア
            for line in art_lines:
                print(line[:step])  # 描画する範囲を増やしていく
            await asyncio.sleep(delay)
    except KeyboardInterrupt:
        os.system("cls" if os.name == "nt" else "clear")
        print("アニメーションを終了しました")


# 正解のときのアニメーション
async def animation_correct():
    art_lines = collect_message.splitlines()
    await animation(art_lines)


# 正解できなかったときのアニメーション
async def animation_wrong():
    art_lines = fall_message.splitlines()
    await animation(art_lines)

if __name__ == "__main__":
    asyncio.run(animation_correct())
